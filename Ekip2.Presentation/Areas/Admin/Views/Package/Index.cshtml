@model IEnumerable<Ekip2.Presentation.Areas.Admin.Models.PackageVMs.PackageListVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="packages__container">
    <div class="packages">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="packages__title">@Localizer["Packages"]</h1>
            <a class="btn btn-create" asp-action="Create">@Localizer["Add"]</a>
        </div>

        <div class="packageItem__container">
            @foreach (var item in Model)
            {
                <div class="packageItem">
                    <div class="card">
                        <div class="card__header">
                            <h2>@item.Name</h2>
                        </div>
                        <div class="card__desc">@item.Description</div>
                        <div class="price">
                            <span>$@item.Price.ToString("0.00")</span>
                            <span>/ month</span>
                        </div>
                        <div class="card__actions">
                            <a class="btn btn-update" asp-action="Update" asp-route-id="@item.Id">@Localizer["Update"]</a>
                            <button class="btn btn-delete" data-id="@item.Id">@Localizer["Delete"]</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<style>
    .packages__container {
        padding: 2rem;
        background-color: #F5F7FF;
    }

    .packages {
        max-width: 1200px;
        margin: 0 auto;
        text-align: center;
    }

    .packages__title {
        color: #7978E9;
        margin-bottom: 30px;
        font-size: 2em;
    }

    .packageItem__container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        gap: 1rem;
    }

    .packageItem {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
        text-align: left;
        width: calc(33.333% - 1rem); /* Adjust for 3 cards per row */
        box-sizing: border-box;
        margin-bottom: 1rem;
    }

    .card {
        margin-bottom: 1rem;
    }

    .card__header {
        margin-bottom: 1rem;
    }

    .card__desc {
        color: #777;
        font-size: 1rem;
    }

    .price {
        font-size: 1.25rem;
        font-weight: bold;
        margin-bottom: 1rem;
    }

    .card__actions {
        display: flex;
        justify-content: space-between;
    }

    .btn {
        text-decoration: none;
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1rem;
    }

    .btn-create {
        text-decoration: none;
        color: white;
        font-weight: bold;
        background-color: #7978E9;
        padding: 8px 15px;
        border-radius: 15px;
        display: inline-block;
        transition: background-color 0.2s ease;
        font-size: 0.9em;
        width: 130px;
        text-align: center;
    }

    .btn-update {
        background-color: #7978E9;
        color: white;
    }

    .btn-delete {
        background-color: #dc3545;
        color: white;
    }

</style>




<script>
    $('.btn-delete').click(function () {
        var id = $(this).data('id');
        swal({
            title: "@Localizer["DeleteConfirmation"]",
            text: "@Localizer["DeleteConfirmationText"]",
            icon: "warning",
            buttons: {
                cancel: {
                    text: "@Localizer["No"]",
                    visible: true,
                    className: "btn btn-secondary",
                    closeModal: true
                },
                confirm: {
                    text: "@Localizer["Yes"]",
                    className: "btn btn-danger",
                    closeModal: false
                }
            }
        }).then((isConfirm) => {
            if (isConfirm) {
                $.ajax({
                    url: '@Url.Action("Delete", "Package", new { area = "Admin" })', // Alan adı varsa ekleyin
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        swal({
                            title: "@Localizer["Deleted"]",
                            text: "@Localizer["DeleteSuccessText"]",
                            icon: "success"
                        }).then(() => {
                            location.reload(); // Sayfayı başarıyla yenile
                        });
                    },
                    error: function () {
                        swal("@Localizer["Error"]", "@Localizer["DeleteErrorText"]", "error");
                    }
                });
            } else {
                swal.close();
            }
        });
    });
</script>